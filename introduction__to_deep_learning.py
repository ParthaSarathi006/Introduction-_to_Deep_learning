# -*- coding: utf-8 -*-
"""Introduction _to_Deep_learning.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11GFCIctM41uuloMxKBjUrlHXtUIcYIyf
"""



!pip install tensorflow

import tensorflow as tf
a=tf.constant(3)
b=tf.constant(6)

c=tf.math.add(a,b)

a

print(c.numpy())

import numpy as np
import pandas as pd
import sklearn.datasets
from sklearn.model_selection import train_test_split

bc_data=sklearn.datasets.load_breast_cancer()

print(bc_data)

data=pd.DataFrame(bc_data.data,columns=bc_data.feature_names)

data['Label']=bc_data.target

data.head()

data.shape

data.isnull().sum()

data['Label'].value_counts()

x=data.drop(['Label'],axis=1)
y=data['Label']

xtrain,xtest,ytrain,ytest=train_test_split(x,y,test_size=0.2,random_state=20)

from sklearn.preprocessing import StandardScaler
sc=StandardScaler()
sc_xtrain=sc.fit_transform(xtrain)
sc_xtest=sc.fit_transform(xtest)

import tensorflow as tf
from tensorflow import keras

model=keras.Sequential([
                        keras.layers.Flatten (input_shape=(30,)),
                        keras.layers.Dense(20,activation='relu'),
                        keras.layers.Dense(2,activation='sigmoid')
                        ])

model.compile(optimizer='adam',
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy'])

history=model.fit(sc_xtrain,ytrain,validation_split=0.1,epochs=50)

import matplotlib.pyplot as plt

plt.plot(history.history['accuracy'])
plt.plot(history.history['val_accuracy'])
plt.title("Model accuracy")
plt.legend(['training','validation data'],loc='lower right')

plt.plot(history.history['loss'])
plt.plot(history.history['val_loss'])
plt.title("Model Loss")
plt.legend(['loss','validation loss'],loc='upper right')

ypred=model.predict(sc_xtest)
print(ypred)

pred=np.argmax(ypred,axis=1)
print(pred)

